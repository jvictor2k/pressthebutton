@model PressTheButton.ViewModels.QuestionStatsViewModel

<div class="container">
    <div class="row justify-content-center align-items-center">
        <div class="card border-primary shadow text-center mt-3 w-auto h-auto">
            <div class="card-body">
                <div class="card-text" style="font-size: 26px;">@Html.DisplayFor(model => model.Question.Text)</div>
            </div>
        </div>

        <div class="text-center text-primary mt-3" style="font-size: 26px;"><strong>Mas...</strong></div>

        <div class="card border-primary shadow text-center mt-3 w-auto h-auto">
            <div class="card-body">
                <div class="card-text" style="font-size: 26px;">@Html.DisplayFor(model => model.Question.Negative)</div>
            </div>
        </div>

        <div class="text-center">
            <a asp-action="Index" class="btn btn-lg btn-primary mt-4 mb-4"><strong>PRÓXIMO</strong></a>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <b class="col-sm-6 text-start text-success">@Model.YesPercentage.ToString("0.00")%</b>
        <b class="col-sm-6 text-end text-danger">@Model.NoPercentage.ToString("0.00")%</b>
    </div>
</div>

<div class="progress">
    <div id="trueProgress" class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width: @Model.YesPercentage.ToString("0")%;" aria-valuemin="0" aria-valuemax="100"></div>
    <div id="falseProgress" class="progress-bar progress-bar-striped progress-bar-animated bg-danger" role="progressbar" style="width: @Model.NoPercentage.ToString("0")%;" aria-valuemin="0" aria-valuemax="100"></div>
</div>


<p class="mt-5 text-center text-primary">Total de respostas: @Model.TotalResponses</p>

<p class="text-center text-success">Apertaram o botão: @Model.YesPercentage.ToString("0.00")%</p>

<p class="mb-5 text-center text-danger">Não apertaram o botão: @Model.NoPercentage.ToString("0.00")%</p>
<div class="text-center">
    <form id="commentForm" asp-controller="Question" asp-action="MakeComment" asp-route-questionId="@Model.Question.QuestionId" method="post">
        <div class="form-group">
            <textarea placeholder="Comentar..." class="form-control" id="commentText" name="text" rows="1" style="resize: none"></textarea>
            <button type="submit" class="btn btn-primary mt-3">Comentar</button>
        </div>
    </form>
</div>

@await Component.InvokeAsync("Counter", Model.CommentsWithUserNames.Count())

<div>
    @if (Model.CommentsWithUserNames != null && Model.CommentsWithUserNames.Any())
    {
        <div class="container mt-4">
            @foreach (var (comment, userName) in Model.CommentsWithUserNames)
            {
                var commentId = comment.CommentId;
                var numberOfReplies = Model.ReplysWithUserNames.Count(tuple => tuple.Item1.CommentId == commentId);

                @await Html.PartialAsync("_CommentPartial", new Tuple<Comment, string>(comment, userName));

                if (numberOfReplies > 0)
                {
                    <button class="btn link-primary" style="text-decoration: none;" type="button" data-bs-toggle="collapse" data-bs-target="#replysCollapse_@comment.CommentId" aria-expanded="false" aria-controls="replysCollapse">
                        <strong>@numberOfReplies Respostas</strong>
                    </button>
                }
                <div class="collapse" id="replysCollapse_@comment.CommentId">
                    <div>
                        @foreach (var (reply, replyUserName) in Model.ReplysWithUserNames)
                        {
                            if (reply.CommentId == comment.CommentId)
                            {
                                @await Html.PartialAsync("_ReplyPartial", new Tuple<Reply, string>(reply, userName))
                            }
                        }
                    </div>
                </div>
            }
        </div>
    }
</div>

<script>
    document.getElementById('commentText').addEventListener('keydown', function (event) {
        if (event.keyCode === 13 && !event.shiftKey) {
            event.preventDefault();
            document.getElementById('commentForm').submit();
        }
    });

    let collapses = document.querySelectorAll('[id^="replyCollapse_"]');
    let btns = document.querySelectorAll(".btn-responder")
    btns.forEach((item) => {
        item.addEventListener('click', () => {
            closeAllCollapses(collapses)
        })
    })

    function closeAllCollapses(collapses) {
        collapses.forEach((item) => {
            item.classList.remove('show')
        })
    }
</script>